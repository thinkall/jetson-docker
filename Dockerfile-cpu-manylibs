# docker build -t orangelabschina/pose_estimation_arm64:cpu-manylibs .

FROM arm64v8/ubuntu:18.04

# Install systems libs
RUN apt-get update && \
    apt-get install -y \
    apt-utils curl libcurl3-dev libfreetype6-dev libglu1-mesa libglu1-mesa-dev \
    libhdf5-dev hdf5-tools libhdf5-serial-dev libjpeg8-dev libpng-dev libtool \
    libx11-dev libxi-dev libxmu-dev libzmq3-dev openjdk-8-jdk \
    openjdk-8-jre-headless python3 python3-dev python3-pip vim wget curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install python packages
RUN HDF5_DIR=/usr/lib/aarch64-linux-gnu/hdf5/serial/  \
    pip3 install --no-cache-dir  \
    h5py numpy requests flask json5 Pillow celery redis

# Install tensorflow
#RUN pip3 install --no-cache-dir https://raw.githubusercontent.com/dujiangsu/tensorflow-1.11.0-cp35-cp35m-linux_aarch64/master/tensorflow-1.11.0-cp35-cp35m-linux_aarch64.whl

RUN pip3 install --no-cache-dir https://raw.githubusercontent.com/markjay4k/Tensorflow-1.9rc0-py36-aarch64/master/tensorflow-1.9.0rc0-cp36-cp36m-linux_aarch64.whl


RUN apt-get update && apt-get install -y build-essential cmake git pkg-config wget zip swig && \ 
pip3 install --no-cache-dir setuptools Cython && \
apt-get install -y libsm6 libxrender1 libxext-dev libfontconfig1


#Pre-Install Jetson case
RUN apt-get -y install libllvm-7-ocaml-dev libllvm7 llvm-7 llvm-7-dev llvm-7-doc llvm-7-examples llvm-7-runtime

ENV LLVM_CONFIG=/usr/bin/llvm-config-7
ENV DEBIAN_FRONTEND=noninteractive

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-opencv python3-scipy python3-matplotlib && \
# E: Unable to locate package opencv-contrib-python3
rm -rf /tmp/*.tar.gz && \
apt-get clean && rm -rf /tmp/* /var/tmp* /var/lib/apt/lists/* && \
rm -f /etc/ssh/ssh_host_* && rm -rf /usr/share/man?? /usr/share/man/??_* && \
mkdir -p /workplace/tf-openpose

COPY . /workplace/tf-openpose/

RUN cd /workplace/tf-openpose/ && \
pip3 install -r requirements.txt --no-cache-dir 

RUN cd tf_pose/pafprocess && swig -python -c++ pafprocess.i && python3 setup.py build_ext --inplace

WORKDIR /workplace/tf-openpose/
ENTRYPOINT ["python3", "run_stream.py", "--model=mobilenet_thin", "--resize=432x368", "--image=./images/p1.jpg"]
